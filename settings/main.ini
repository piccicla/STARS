[indata]
#root folder with the input images and shapes
working_directory = D:/ITC/courseMaterial/module13GFM2/2015/code/STARS/processing

#the field name that contains the class
field_name = CLASS

[data_extraction]
# extract mean value or all the pixel values when intersecting polygons to raster intersection
mean = True
#the band combinations to use in format [(1,2),(1,3),....]; use * for all combinations; [] for no combinations
band_combinations = *
# a percentage of pixels to consider during polygons to raster intersection (>0); use 100 if no subset
pixel_subset = 10
# the single band combination to use for charting the NDI in format [(1,2)]; only one combination is now possible
NDI_chart_combinations = [(7,5)]
#the nodatavalue to assign when polygons falls outside the raster (this works when mean == True)
nodatavalue = -999.0


[haralick]
#folder tha will contain the input image for heralick
hara_dir = D:/ITC/courseMaterial/module13GFM2/2015/code/STARS/processing/image
# heralick image suffix format (comma separated list)
haralick_format = [".tif"]
#which type of heralick we want to consider?  Possible 3 items: "simple", "advanced", "higher"
haralick_image_type = ["simple"]
#folder tha will contain the input ndi images for heralick
hara_ndi_dir = D:/ITC/courseMaterial/module13GFM2/2015/code/STARS/processing/haralik/NDI
# heralick ndi image suffix format (comma separated list)
haralick_ndi_format = [".tif"]
#which type of heralick we want to consider?  Possible 3 items: "simple", "advanced", "higher"
haralick_ndi_type = ["simple"]

[skll]
#folder tha will contain the input text files for skll
skll_dir = D:/ITC/courseMaterial/module13GFM2/2015/code/STARS/processing/Skll/stars/train+dev/

[boruta]
boruta_dir = D:/ITC/courseMaterial/module13GFM2/2015/code/STARS/processing/boruta

[classification]
#percentage of validation data
validation_data = 25
# classified raster name prefix
out_name = classify.tif
#tile size used during classification
tile_size = 1024

[ipyparallel]
#it's necessary to start manually from the command line e.g ipcluster start
parallelize = True
engine_messages = True
#max number of parallel processes (decrease if the processes are on the same machine and ram is not enough)
max_processes = 10
